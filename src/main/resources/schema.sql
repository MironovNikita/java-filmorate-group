CREATE TABLE IF NOT EXISTS Films (
    film_id int generated by default as identity NOT NULL,
    film_name varchar(40)   NOT NULL,
    description varchar(200),
    release_date DATE   NOT NULL,
    duration int   NULL,
    rate int NULL,
    mpa_id int   NULL,
    director_id int NULL,
    CONSTRAINT pk_Films PRIMARY KEY (film_id),
    FOREIGN KEY(mpa_id) REFERENCES Mpa (mpa_id),
    FOREIGN KEY(director_id) REFERENCES Directors (director_id)

);

CREATE TABLE IF NOT EXISTS Users
(
    user_id int generated by default as identity NOT NULL,
    email varchar(40) NOT NULL,
    login varchar(40) NOT NULL,
    user_name varchar(40) NULL,
    birthday date NULL,
    CONSTRAINT pk_Users PRIMARY KEY (user_id),
    CONSTRAINT uc_Users_email UNIQUE (email),
    CONSTRAINT uc_Users_login UNIQUE (login)
);

CREATE TABLE IF NOT EXISTS Genres
(
    genre_id int,
    genre_name varchar(40),
    CONSTRAINT pk_Genres PRIMARY KEY (genre_id),
    CONSTRAINT uc_Genres_name_id UNIQUE (genre_name)
);

CREATE TABLE IF NOT EXISTS FilmGenres
(
    film_id int,
    genre_id int,
    CONSTRAINT unique_pair UNIQUE (film_id, genre_id),
    FOREIGN KEY(film_id) REFERENCES Films (film_id),
    FOREIGN KEY(genre_id) REFERENCES Genres (genre_id)
);

CREATE TABLE IF NOT EXISTS Mpa
(
    mpa_id int NOT NULL,
    mpa_name varchar(10)   NOT NULL,
    CONSTRAINT pk_Mpa PRIMARY KEY (mpa_id),
    CONSTRAINT uc_Mpa_rating UNIQUE (mpa_name)
);

CREATE TABLE IF NOT EXISTS Friends
(
    user_id int,
    friend_id int,
    FOREIGN KEY(user_id) REFERENCES Users (user_id),
    FOREIGN KEY(friend_id) REFERENCES Users (user_id)
);

CREATE TABLE IF NOT EXISTS Likes
(
    film_id int,
    user_id int,
    FOREIGN KEY(film_id) REFERENCES Films (film_id),
    FOREIGN KEY(user_id) REFERENCES Users (user_id)
);

CREATE TABLE IF NOT EXISTS Directors
(
    director_id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    director_name varchar(100) NOT NULL,
    CONSTRAINT pk_Directors PRIMARY KEY (director_id)
);

CREATE TABLE IF NOT EXISTS FilmDirectors
(
    film_id     INT NOT NULL,
    director_id INT NOT NULL,
    FOREIGN KEY (film_id) REFERENCES Films (film_id) ON DELETE CASCADE,
    FOREIGN KEY (director_id) REFERENCES Directors (director_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS Feed (
    event_timestamp bigint,
    user_id int,
    event_type varchar,
    operation varchar,
    event_id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    entity_id int,
    CONSTRAINT pk_feed PRIMARY KEY (event_id),
    FOREIGN KEY (user_id) REFERENCES Users (user_id)
);

ALTER TABLE FILMS ALTER COLUMN FILM_ID RESTART WITH 1;
ALTER TABLE USERS ALTER COLUMN USER_ID RESTART WITH 1;
ALTER TABLE Directors ALTER COLUMN director_id RESTART WITH 1;
ALTER TABLE Feed ALTER COLUMN event_id RESTART WITH 1;